// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyMVC8.Models;

#nullable disable

namespace MyMVC8.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MyMVC8.Models.Film", b =>
                {
                    b.Property<int>("FilmID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FilmID"), 1L, 1);

                    b.Property<string>("FilmCertificate")
                        .IsRequired()
                        .HasColumnType("varchar(5)");

                    b.Property<string>("FilmDescription")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FilmImage")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<decimal>("FilmPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("FilmTitle")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Stars")
                        .HasColumnType("int");

                    b.HasKey("FilmID");

                    b.ToTable("Films");
                });
#pragma warning restore 612, 618
        }
    }
}
